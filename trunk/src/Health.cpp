#include <Health.h>
#include <dtUtil/mathdefines.h>
#include <limits>

using namespace SMK;

////////////////////////////////////////////////////////////////////////////////
SMK::Health::Health():
 mAmount(UCHAR_MAX)
,mMax(UCHAR_MAX)
{

}

////////////////////////////////////////////////////////////////////////////////
Health::Health(HealthType health, HealthType maxHealth):
 mAmount(health)
,mMax(maxHealth)
{
}

////////////////////////////////////////////////////////////////////////////////
void Health::SetHealth(HealthType val)
{
   mAmount = val;

   dtUtil::Clamp(mAmount, HealthType(0), GetMax());

}

////////////////////////////////////////////////////////////////////////////////
HealthType Health::GetHealth() const
{
   return mAmount;
}
 

////////////////////////////////////////////////////////////////////////////////
void SMK::Health::DecrementHealth(HealthType amount)
{  
   mAmount =- amount ;

   dtUtil::ClampMin(mAmount, HealthType(0));
}

////////////////////////////////////////////////////////////////////////////////
void SMK::Health::IncrementHealth(HealthType amount)
{
   mAmount += amount;
   dtUtil::ClampMax(mAmount, GetMax());
}

////////////////////////////////////////////////////////////////////////////////
HealthType Health::GetMax() const
{
   return mMax;
}

////////////////////////////////////////////////////////////////////////////////
void SMK::Health::SetMax(const HealthType& val)
{
   mMax = val;
}

